
Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  decompressFromBase64,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
} = require('./runtime/data-proxy')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.14.1
 * Query Engine version: d9a4c5988f480fa576d43970d5a23641aa77bc9c
 */
Prisma.prismaVersion = {
  client: "4.14.1",
  engine: "d9a4c5988f480fa576d43970d5a23641aa77bc9c"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


  const path = require('path')

/**
 * Enums
 */

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  roleId: 'roleId',
  estadoId: 'estadoId',
  saldo: 'saldo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserXEstadoScalarFieldEnum = {
  id: 'id',
  descripcion: 'descripcion'
};

exports.Prisma.UserXRoleScalarFieldEnum = {
  id: 'id',
  descripcion: 'descripcion'
};


exports.Prisma.ModelName = {
  User: 'User',
  UserXRole: 'UserXRole',
  UserXEstado: 'UserXEstado'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Aure\\DESARROLLOS\\js\\deno\\deno-oak-prisma\\apps\\ttec-euromillones\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [],
    "previewFeatures": [
      "deno"
    ],
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "..\\..\\..\\..\\.env"
  },
  "relativePath": "..\\..\\prisma",
  "clientVersion": "4.14.1",
  "engineVersion": "d9a4c5988f480fa576d43970d5a23641aa77bc9c",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "dataProxy": true,
  "postinstall": false
}

const fs = require('fs')

config.dirname = __dirname
if (!fs.existsSync(path.join(__dirname, 'schema.prisma'))) {
  warnOnce('bundled-warning-1', 'Your generated Prisma Client could not immediately find its `schema.prisma`, falling back to finding it via the current working directory.')
  warnOnce('bundled-warning-2', 'We are interested in learning about your project setup. We\'d appreciate if you could take the time to share some information with us.')
  warnOnce('bundled-warning-3', 'Please help us by answering a few questions: https://pris.ly/bundler-investigation')
  config.dirname = path.join(process.cwd(), "generated\\client")
  config.isBundled = true
}

const compressedDMMF = ''
const decompressedDMMF = decompressFromBase64(compressedDMMF)
// We are parsing 2 times, as we want independent objects, because
// DMMFClass introduces circular references in the dmmf object
const dmmf = JSON.parse(decompressedDMMF)
exports.Prisma.dmmf = JSON.parse(decompressedDMMF)
config.document = dmmf


config.inlineSchema = 'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwNCi8vIGxlYXJuIG1vcmUgYWJvdXQgaXQgaW4gdGhlIGRvY3M6IGh0dHBzOi8vcHJpcy5seS9kL3ByaXNtYS1zY2hlbWENCg0KZ2VuZXJhdG9yIGNsaWVudCB7DQogIHByb3ZpZGVyID0gInByaXNtYS1jbGllbnQtanMiDQogIHByZXZpZXdGZWF0dXJlcyA9IFsiZGVubyJdDQogIG91dHB1dCA9ICIuLi9nZW5lcmF0ZWQvY2xpZW50Ig0KfQ0KDQoNCmRhdGFzb3VyY2UgZGIgew0KICBwcm92aWRlciA9ICJwb3N0Z3Jlc3FsIg0KICB1cmwgICAgICA9IGVudigiREFUQUJBU0VfVVJMX1BPU1RfVFRFQ19FVVJPTUlMTE9ORVMiKQ0KfQ0KDQptb2RlbCBVc2VyIHsNCiAgaWQgICAgICAgICAgIEludCAgICAgICAgICAgQGlkICAgDQogIG5hbWUgICAgICAgICBTdHJpbmcgDQogIGVtYWlsICAgICAgICBTdHJpbmcgICAgICAgIEB1bmlxdWUNCiAgcGFzc3dvcmQgICAgIFN0cmluZyAgDQogIHJvbGVJZCAgICAgICBJbnQgICAgICAgICAgDQogIFVzZXJYUm9sZSAgICBVc2VyWFJvbGUgICAgIEByZWxhdGlvbihmaWVsZHM6IFtyb2xlSWRdLCByZWZlcmVuY2VzOiBbaWRdKQ0KICBlc3RhZG9JZCAgICAgSW50ICAgICAgICAgDQogIFVzZXJYRXN0YWRvICBVc2VyWEVzdGFkbyBAcmVsYXRpb24oZmllbGRzOiBbZXN0YWRvSWRdLCByZWZlcmVuY2VzOiBbaWRdKQ0KICBzYWxkbyAgICAgICAgRGVjaW1hbCBAZGIuRGVjaW1hbCg5LDIpDQogIGNyZWF0ZWRBdCAgICBEYXRlVGltZSAgICAgIEBkZWZhdWx0KG5vdygpKQ0KICB1cGRhdGVkQXQgICAgRGF0ZVRpbWUgICAgICBAdXBkYXRlZEF0DQp9DQoNCm1vZGVsIFVzZXJYUm9sZSB7ICAgIA0KICAgIGlkICAgICAgICAgICBJbnQgICAgICAgQGlkICANCiAgICBkZXNjcmlwY2lvbiAgU3RyaW5nICAgIEB1bmlxdWUNCiAgICB1c2VyIFVzZXJbXQ0KICAgIA0KfQ0KDQptb2RlbCBVc2VyWEVzdGFkbyB7DQogICAgaWQgICAgICAgICAgIEludCAgICAgICBAaWQgIA0KICAgIGRlc2NyaXBjaW9uICBTdHJpbmcgICAgQHVuaXF1ZSAgICANCiAgICB1c2VyIFVzZXJbXQ0KfQ0KDQoNCi8vIG1vZGVsIFVzZXJ4Um9sZSB7DQovLyAgIGlkICAgICAgICAgSW50IEBpZCBAZGVmYXVsdChhdXRvaW5jcmVtZW50KCkpDQovLyAgIHVzZXJJZCAgICAgSW50IA0KLy8gICB1c2VyIFVzZXIgIEByZWxhdGlvbihmaWVsZHM6IFt1c2VySWRdLCByZWZlcmVuY2VzOiBbaWRdKQ0KLy8gICByb2xlICAgICAgIFJvbGUgIEBkZWZhdWx0KE5PUk1BTCkNCiAgDQovLyB9DQoNCg0KLy8gZW51bSBSb2xlIHsgIA0KLy8gICBOT1JNQUwNCi8vICAgQURNSU4NCi8vICAgR09EDQovLyB9DQovLyBlbnVtIEVzdGFkbyB7ICANCi8vICAgQUNUSVZFDQovLyAgIEJMT0NLDQovLyAgIFVOU1VCU0NSSUJFRCANCi8vIH0='
config.inlineSchemaHash = '0db9de7d930fac484da538a3652bf70803e63612ed71d4246c2bb4a8dbc5f454'

config.inlineDatasources = {
  "db": {
    "url": {
      "fromEnvVar": "DATABASE_URL_POST_TTEC_EUROMILLONES",
      "value": null
    }
  }
}


const { warnEnvConflicts } = require('./runtime/data-proxy')

warnEnvConflicts({
    rootEnvPath: config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),
    schemaEnvPath: config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath)
})


const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

