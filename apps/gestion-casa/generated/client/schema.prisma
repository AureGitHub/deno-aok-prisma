// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["deno"]
  output = "../generated/client"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_POST_GESTIONCASA")
}


model casa {
  id         Int       @id @default(autoincrement())
  nombre     String    @unique
  baja       Boolean
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}



model empleada {
  id         Int       @id @default(autoincrement())
  nombre     String    @unique
  baja       Boolean
  servicios  servicio[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}


model servicio {
  id             Int       @id @default(autoincrement())
  fecha          DateTime  @db.Date        
  horaInicio     DateTime   @db.Time()
  horaFin        DateTime   @db.Time()
  suplLevantar   Boolean    @default(false)
  empleadaId     Int  
  empleada       empleada   @relation(fields: [empleadaId], references: [id])
  pagado         Boolean    @default(false)
  horas          Int
  minutos        Int
  importe        Decimal @db.Decimal(9,2)
  observacion    String?  
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt 
  gasto          gasto?

}


model turno {
  id         Int       @id @default(autoincrement())
  fecha      DateTime  @db.Date     
  quien      String
}


model agenda {
  id               Int       @id @default(autoincrement())
  fecha            DateTime  @db.Date     
  tipoagendaId     Int
  tipo           tipoagenda   @relation(fields: [tipoagendaId], references: [id])
  observacion      String
}

model tipoagenda {
   id            Int  @id  @default(autoincrement())
   descripcion   String  @unique
   color         String
   agendas      agenda[]
}

model gasto {
  id               Int          @id @default(autoincrement())
  fecha            DateTime     @db.Date     
  tipogastoId      Int
  tipo             tipogasto    @relation(fields: [tipogastoId], references: [id])
  importe          Decimal
  observacion      String?  
  servicio         servicio?   @relation(fields: [servicioId], references: [id])
  servicioId        Int?        @unique
  pendientecobro    Boolean    @default(false)
  

}

model tipogasto {
   id            Int  @id  @default(autoincrement())
   descripcion   String  @unique
   color         String
   gastos        gasto[] 
}


model producto {
   id            Int  @id  @default(autoincrement())
   descripcion   String  @unique
   ListaCompras  ListaCompra[]
}

model ListaCompra {
   productoId            Int  @id  
   producto     producto @relation(fields: [productoId], references: [id])
}





